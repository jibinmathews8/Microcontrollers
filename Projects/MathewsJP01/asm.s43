#include "msp430.h"                     ; #define controlled include file
; This exmaple shows the use of basic loops counting up using JL and CMP

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
                                        
        #define BASE_ADDR         0x2A0                                
        ORG     0FFFEh
        DC16    main                    ; set reset vector to 'init' label

        ORG     BASE_ADDR
        DC8     0x23, 0x1F, 0x12, 0x57, 0x14, 0x18, 0x13, 0x12, 0x57, 0x00, 0x18, 0x05, 0x1C, 0x12, 0x13, 0x56

        RSEG    CODE                    ; place program in 'CODE' segment

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        
        MOV.W   #BASE_ADDR, R4          ; Setup a pointer to the data in R4
        MOV.W   #0, R5                  ; Setup the loop counter
        MOV.W   #0, R6                  ; Make sure the result register is 0
        
        ; Loop through the data to add them all together
loop:
        ADD.B   @R4+, R6                ; Add the number stored at the address
                                        ; stored in register R4. Autoincrement
                                        ; the address. Result and running
                                        ; sum stored in R6
        INC.B   R5                      ; Increment our loop counter
        CMP.B   #10, R5                 ; Compare the loop counter to 10
        JL     loop                    ; Jump if not equal to 10
        
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)
        END
