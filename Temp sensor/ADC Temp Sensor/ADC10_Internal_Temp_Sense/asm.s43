#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer

        MOV.W   #0x0, R4
        MOV.W   #REFON+SREF_1+ADC10SHT_3+ADC10ON,&ADC10CTL0 ; 64x sample and hold time, 
        MOV.W   #INCH_10+ADC10DIV_7, &ADC10CTL1              ; set input channel to internal
                                                            ; temperature sensor, divide clk by 8                                          
            
main   BIS.W   #ENC+ADC10SC,&ADC10CTL0 ; Start sampling/conversion
 
Test   BIT     #0x1, &ADC10CTL1  ; check the ADC10BUSY bit (LSbit)
       JNE     Test             ; if still Busy, keep checking
       MOV.W   &ADC10MEM, R4         ; store ADC result in R4
                   
       JMP     main                ; Do it again
                                        
       END
